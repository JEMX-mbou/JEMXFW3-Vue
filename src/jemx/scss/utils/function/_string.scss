// @function string.explode
// @description Translates a string to a list with a delimiter.
// @param $string: string
// @param $delimiter: string
// @return list
@function explode($string, $delimiter: '') {
  @if type-of($string) != 'string' {
    @error 'Function string.explode: The argument $string: `#{$string}` is not a string.';
  } @else if type-of($delimiter) != 'string' {
    @error 'Function string.explode: The argument $delimiter: `#{$delimiter}` is not a string.';
  }

  $result: ();
  $running: true;

  @if str-length($delimiter) == 0 {
    @for $i from 1 through str-length($string) {
      $result: append($result, str-slice($string, $i, $i));
    }

    @return $result;
  }

  @while $running {
    $index: str-index($string, $delimiter);

    @if $index != null {
      $item: str-slice($string, 1, ($index - 1));
      $result: append($result, $item);
      $string: str-slice($string, ($index + str-length($delimiter)));
    } @else {
      $running: false;
    }
  }

  @return append($result, $string);
}

